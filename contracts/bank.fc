#include "imports/stdlib.fc";

;; storage variables
global int ctx_balance;

() load_data() impure {
    var ds = get_data().begin_parse();
    ctx_balance = ds~load_uint(32);
    ds.end_parse();
}

() save_data() impure {
    set_data(
        begin_cell()
            .store_uint(ctx_balance, 32)
            .end_cell()
    );
}

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {
    if (in_msg_body.slice_empty?()) {
        return ();
    }

    slice cs = in_msg_full.begin_parse();
    int flags = cs~load_uint(4);
    if (flags & 1) { 
        return ();
    }

    load_data();
    ~strdump("balance");
    ~dump(ctx_balance);

    int coins_amount = in_msg_body~load_coins();
    ~strdump("coins_amount");
    ~dump(coins_amount);

    if (coins_amount != 0) {
      ~strdump("not zero");
      ctx_balance += coins_amount;
      ~strdump("newbalance");
      ~dump(ctx_balance);
      save_data();
      return ();
    }
  
    load_data();

    return ();
}

int get_bal() method_id {
    load_data();
    return ctx_balance;
}
