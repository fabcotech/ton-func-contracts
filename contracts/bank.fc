#include "imports/stdlib.fc";

;; storage variables
global cell ctx_balance;

() load_data() impure {
  var ds = get_data().begin_parse();
  ctx_balance = ds~load_ref();
  ds.end_parse();
}

() save_data(int coins) impure {
  set_data(
    begin_cell()
      .store_ref(
        begin_cell()
          .store_coins(coins)
          .end_cell()
      )
      .end_cell()
  );
}

() recv_internal(int my_balance, int msg_value, cell in_msg_full, slice in_msg_body) impure {


  slice cs = in_msg_full.begin_parse();
  int flags = cs~load_uint(4);
  if (flags & 1) { 
    return ();
  }

  load_data();
  slice current = ctx_balance.begin_parse();
  (_, int current_balance) = current.load_coins();

  if (msg_value != 0) {
    save_data(msg_value + current_balance);
    return ();
  }

  throw(0xffff);
}

cell get_bal() method_id {
  load_data();
  return ctx_balance;
}
